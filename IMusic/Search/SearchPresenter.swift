//
//  SearchPresenter.swift
//  IMusic
//
//  Created by Платон Конкилов on 08.04.2020.
//  Copyright (c) 2020 Платон Конкилов. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchPresentationLogic
{
    func presentSomething(response: Search.Something.Response.ResponseType)
}

class SearchPresenter: SearchPresentationLogic {
    
    weak var viewController: SearchDisplayLogic?
    
    // MARK: Do something
    
    func presentSomething(response: Search.Something.Response.ResponseType) {
        //print("presenter")
        switch response {
        case .some:
            print("presenter .some")
        case .presentFooterView:
            viewController?.displaySomething(viewModel: Search.Something.ViewModel.ViewModelData.displayFooterView)
        case .presentTracks(let searchResults):
            let cells = searchResults?.results.map({ (track) in cellViewModel(from: track)
                }) ?? []
            
            let searchViewModel = SearchViewModel.init(cells: cells)
            print("presenter .presentTracks")
            viewController?.displaySomething(viewModel: Search.Something.ViewModel.ViewModelData.displayTracks(searchViewModel: searchViewModel))
        }
    }
    
    private func cellViewModel(from track: Track) -> SearchViewModel.Cell {
        return SearchViewModel.Cell.init(iconUrlString: track.artworkUrl100, trackName: track.trackName, collectionName: track.collectionName ?? "", artistName: track.artistName, previewUrl: track.previewUrl)
    }
}

